// Code generated by entc, DO NOT EDIT.

package group

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the group type in the database.
	Label = "group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGroupName holds the string denoting the groupname field in the database.
	FieldGroupName = "group_name"
	// FieldMaxParticipants holds the string denoting the maxparticipants field in the database.
	FieldMaxParticipants = "max_participants"
	// FieldInviteOnly holds the string denoting the inviteonly field in the database.
	FieldInviteOnly = "invite_only"
	// FieldDateCreated holds the string denoting the datecreated field in the database.
	FieldDateCreated = "date_created"
	// FieldDateModified holds the string denoting the datemodified field in the database.
	FieldDateModified = "date_modified"
	// FieldDateDeleted holds the string denoting the datedeleted field in the database.
	FieldDateDeleted = "date_deleted"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeEntities holds the string denoting the entities edge name in mutations.
	EdgeEntities = "entities"
	// Table holds the table name of the group in the database.
	Table = "groups"
	// UsersTable is the table that holds the users relation/edge.
	UsersTable = "groups"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// UsersColumn is the table column denoting the users relation/edge.
	UsersColumn = "group_users"
	// EntitiesTable is the table that holds the entities relation/edge.
	EntitiesTable = "groups"
	// EntitiesInverseTable is the table name for the Entity entity.
	// It exists in this package in order to avoid circular dependency with the "entity" package.
	EntitiesInverseTable = "entities"
	// EntitiesColumn is the table column denoting the entities relation/edge.
	EntitiesColumn = "entity_groups"
)

// Columns holds all SQL columns for group fields.
var Columns = []string{
	FieldID,
	FieldGroupName,
	FieldMaxParticipants,
	FieldInviteOnly,
	FieldDateCreated,
	FieldDateModified,
	FieldDateDeleted,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "groups"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"entity_groups",
	"group_users",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// MaxParticipantsValidator is a validator for the "maxParticipants" field. It is called by the builders before save.
	MaxParticipantsValidator func(int32) error
	// DefaultInviteOnly holds the default value on creation for the "inviteOnly" field.
	DefaultInviteOnly bool
	// DefaultDateCreated holds the default value on creation for the "dateCreated" field.
	DefaultDateCreated time.Time
	// DefaultDateModified holds the default value on creation for the "dateModified" field.
	DefaultDateModified time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
